run-name: Run tests ${{ inputs.IMAGE_LABEL }} - ${{ inputs.IMAGE_VERSION }}
on:
  workflow_dispatch:
    inputs:
      IMAGE_VERSION:
        description: 'image version'
        required: false
      AGENT_SPEC:
        description: 'Agent spec'
        required: false
      IMAGE_LABEL:
        description: 'image label e.g. win19, macOS-11, ubuntu22'
        required: false

jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build_matrix_step.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build matrix
        id: build_matrix_step
        shell: pwsh
        run: |
          $IMAGE_LABEL = "${{ inputs.IMAGE_LABEL }}"
          $AllowedCanaryTests =  Get-Content -Path ./_canary.json -Raw | ConvertFrom-Json -Depth 9
          $matrixArray = @()
          foreach ($test in $AllowedCanaryTests) {
              if (-not [string]::IsNullOrEmpty($($test | Where-Object {$_.supportedOSes -match $IMAGE_LABEL}).name)) {
                  if ($test.templates.Count -eq 1 ) {
                      $testPath = './.github/actions/' + $test.templates
                      $testNmae = $test.name
                  } else {
                      switch -Exact -Regex ($IMAGE_LABEL)
                      {
                          "ubuntu" {$suffix = "-ubnt"}
                          "win" {$suffix = "-win"}
                          "mac" {$suffix = "-mac"}
                      }
                      $testPath = './.github/actions/' + $($test.templates | Where-Object {$_ -match $suffix})
                      $testNmae = $test.name
                  }

                  if ([string]::IsNullOrEmpty($test.matrix)) {
                      $matrixArray += @([pscustomobject]@{actions=$testPath;testNmae=$testNmae;parameter=$null})
                  } else {
                      foreach ($matrixItem in $test.matrix.$IMAGE_LABEL) {
                          $matrixArray += @([pscustomobject]@{actions=$testPath;testNmae=$testNmae;parameter=$matrixItem})
                      }
                  }
              }
          }
          [pscustomobject]$matrix = @{
            include = $matrixArray
          }

          write-host $($matrix | ConvertTo-Json -Compress)

          "matrix=$($matrix | ConvertTo-Json -Compress)" | Out-File -Append -FilePath $env:GITHUB_OUTPUT

  matrix-tests:
    needs: [pre-build]
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix: ${{ fromJson(needs.pre-build.outputs.matrix) }}

    name: "${{ matrix.testNmae }} ${{ matrix.parameter }}"
    runs-on: ${{ inputs.AGENT_SPEC }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: "${{ matrix.testNmae }}"
        uses: ./.github/actions/another-test
        with:
          uses: "${{ matrix.actions }}"
          with: '{ ${{ matrix.parameter }} }'
