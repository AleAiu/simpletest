run-name: matrix-run
on:
  workflow_dispatch:
    inputs:
      IMAGE_VERSION:
        description: 'image version'
        required: false

jobs: 
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build_matrix_step.outputs.matrix }}
      #params01: ${{ steps.build_matrix_step.outputs.params01 }}
    steps:
      - name: Build matrix
        id: build_matrix_step
        shell: pwsh
        run: |
          $paths = "./.github/actions/zstd, ./.github/actions/python-c-extension, ./.github/actions/7zip"
          #$parameters = '"",["python": "3.7", "python": "3.8", "python": "3.9", "python": "3.10"],""'
          $matrixArray = $paths.Split(',').Trim() | ConvertTo-Json -AsArray -Compress
          
          write-host $matrixArray
          #$parameters = '"none",[["python": "3.7", "python": "3.8", "python": "3.9", "python": "3.10"]],"none"'

          #$matrixParameters = $parameters.Split(",[").Split("],") | ConvertTo-Json -AsArray -Compress
          
          #write-host $matrixParameters
          
          "matrix=$matrixArray" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
          #"params01=$matrixParameters" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
          

  matrix-tes:
    needs: [pre-build]
    strategy:
      fail-fast: false
      matrix:
        actions: ${{ fromJson(needs.pre-build.outputs.matrix) }}
        #with: ${{ fromJson(needs.pre-build.outputs.params01) }}
          
            
    name: run all tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: parse matrix
        shell: pwsh
        run: |
          $matrixJson = '["\"none\"","[\"python\": \"3.7\", \"python\": \"3.8\", \"python\": \"3.9\", \"python\": \"3.10\"]","\"none\""]'
          $matrixInput = $matrixJson | ConvertFrom-Json -Depth 5
          foreach ($item in $matrixInput) {
          if ($item -match "none") {
              $arrayItem = ${{ null }}
              write-host $arrayItem
              "TEST_PARAMETERS=$arrayItem" | Out-File -Append $env:GITHUB_ENV
          } else {
              $arrayItem = $($item.Trim("[]") | ConvertTo-Json -AsArray -Compress)
              write-host $arrayItem
              "TEST_PARAMETERS=$arrayItem" | Out-File -Append $env:GITHUB_ENV
          }
          }
     
      - name: test1
        uses: ./.github/actions/another-test
        with:
          uses: "${{ matrix.actions }}"
          with: '{ ${{ env.TEST_PARAMETERS }} }'

            
