on:
  workflow_call:
    inputs:
      image_name:
        type: string
        description: An OS image to build
        required: true

defaults:
  run:
    shell: pwsh

permissions:
      id-token: write
      contents: read

jobs:
  Windows-latest:
      runs-on: ubuntu-latest
      environment: test-ci
      steps:
        - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
            enable-AzPSSession: true

        - name: 'Get resource group with PowerShell action'
          uses: azure/powershell@v1
          with:
             inlineScript: |
                $tempAccessToken = (Get-AzAccessToken).token
                "AccessTok=$tempAccessToken" | Out-File -Append -FilePath $env:GITHUB_ENV
             azPSVersion: "latest"

        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            repository: actions/runner-images

        - name: Set image variables
          run: |
            $ImageType = "${{ inputs.image_name }}"

            if ($ImageType.StartsWith("ubuntu")) { $TemplateDirectoryName = "linux" } else { $TemplateDirectoryName = "win" }

            $TemplateDirectoryPath = Join-Path "images" $TemplateDirectoryName | Resolve-Path
            $TemplatePath = Join-Path $TemplateDirectoryPath "$ImageType.pkr.hcl"

            if ( -not (Test-Path $TemplatePath) ) {
              $TemplatePath = Join-Path $TemplateDirectoryPath "$ImageType.json"
            }
            "TemplatePath=$TemplatePath" | Out-File -Append -FilePath $env:GITHUB_ENV
            "TemplateDirectoryPath=$TemplateDirectoryPath" | Out-File -Append -FilePath $env:GITHUB_ENV
            "ImageType=$ImageType" | Out-File -Append -FilePath $env:GITHUB_ENV

        - name: Build image
          run: |
              $spnsecret = $(az keyvault secret show --name "outlook-email-address" --vault-name "imagegeneration"--query value -o tsv)
              $ResourcesNamePrefix = ${{ github.run_id }} % [System.UInt32]::MaxValue
              ./images.CI/linux-and-win/build-image.ps1 `
                -TemplatePath ${{ env.TemplatePath }} `
                -ClientId ${{ secrets.CLIENT_ID }} `
                -ClientSecret $spnsecret `
                -Location ${{ secrets.AZURE_LOCATION }} `
                -ResourcesNamePrefix $ResourcesNamePrefix `
                -ResourceGroup ${{ secrets.AZURE_RESOURCE_GROUP }} `
                -StorageAccount ${{ secrets.AZURE_STORAGE_ACCOUNT }} `
                -SubscriptionId ${{ secrets.AZURE_SUBSCRIPTION }} `
                -TenantId ${{ secrets.AZURE_TENANT }} `
                -VirtualNetworkName ${{ secrets.BUILD_AGENT_VNET_NAME }} `
                -VirtualNetworkSubnet ${{ secrets.BUILD_AGENT_SUBNET_NAME }} `
                -VirtualNetworkRG ${{ secrets.BUILD_AGENT_VNET_RESOURCE_GROUP }} `
          env:
            PACKER_LOG: 1
            PACKER_LOG_PATH: ${{ runner.temp }}/packer-log.txt
            RUN_VALIDATION_FLAG: true
