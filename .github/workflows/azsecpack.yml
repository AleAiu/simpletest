run-name: ${{ inputs.AGENT_SPEC }}-${{ inputs.IMAGE_VERSION }} azseckpac test
on:
  workflow_dispatch:
    inputs:
      IMAGE_VERSION:
        description: 'image version'
        required: false
      AGENT_SPEC:
        description: 'OS platform'
        required: false  
        
jobs: 
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build_matrix_step.outputs.matrix }}
      isubuntu: ${{ steps.build_condition.outputs.IS_UBUNTU }}
      iswindows: ${{ steps.build_condition.outputs.IS_WINDOWS }}
    steps:
      - name: Build matrix
        id: build_matrix_step
        shell: pwsh
        run: |
          $matrixJson = $("${{ inputs.AGENT_SPEC }}").Split(',').Trim() | ConvertTo-Json -AsArray -Compress
          write-host $matrixJson

          "matrix=$matrixJson" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
      
      - name: Build conditions
        id: build_condition
        shell: pwsh
        run: |
          if (("${{ inputs.AGENT_SPEC }}" -match "ubuntu") -and ("${{ inputs.AGENT_SPEC }}" -notmatch "windows")) {
            $isUbn01 = $true
            $isWin01 = $false
          } elseif (("${{ inputs.AGENT_SPEC }}" -match "windows") -and ("${{ inputs.AGENT_SPEC }}" -notmatch "ubuntu")) {
            $isUbn01 = $false
            $isWin01 = $true
          } elseif (("${{ inputs.AGENT_SPEC }}" -match "ubuntu") -and ("${{ inputs.AGENT_SPEC }}" -match "windows")) {
            $isUbn01 = $true
            $isWin01 = $true
          }
           "IS_UBUNTU=$isUbn01" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
           "IS_WINDOWS=$isWin01" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
      
  azsecpackw19:
    needs: [pre-build]
    if: ${{ needs.pre-build.outputs.iswindows == 'true' }}
    strategy:
      matrix:
        os: ${{ fromJson(needs.pre-build.outputs.matrix) }}
    runs-on: ${{ matrix.os }} 
    name: run test on ${{ inputs.AGENT_SPEC }}
    steps:
      - name: repo checkout
        uses: actions/checkout@v3
      - name: run test
        uses: ./.github/actions/azsecpack-win  
    
  #azsecpackw22:
  #  needs: [pre-build]
  #  strategy:
  #    matrix:
  #      os: ${{ fromJson(needs.pre-build.outputs.matrix) }}
  #  runs-on: ${{ matrix.os }}
  #  if: contains(${{ inputs.AGENT_SPEC }}, 'windows-2022')
  #  name: run test on ${{ inputs.AGENT_SPEC }}
  #  steps:
  #    - name: repo checkout
  #      uses: actions/checkout@v3
  #    - name: run test
  #      uses: ./.github/actions/azsecpack-win

  azsecpacku20:
    needs: [pre-build]
    if: ${{ needs.pre-build.outputs.isubuntu == 'true' }}
    strategy:
      matrix:
        os: ${{ fromJson(needs.pre-build.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    name: run test on ${{ inputs.AGENT_SPEC }}
    steps:
      - name: repo checkout
        uses: actions/checkout@v3
      - name: run test
        uses: ./.github/actions/azsecpacl-ubnt

 # azsecpacku22:
 #   needs: [pre-build]
 #   strategy:
 #     matrix:
 #       os: ${{ fromJson(needs.pre-build.outputs.matrix) }}
 #   runs-on: ${{ matrix.os }}
 #   if: contains(${{ inputs.AGENT_SPEC }}, 'ubuntu-22.04')
 #   name: run test on ${{ inputs.AGENT_SPEC }}
 #   steps:
 #     - name: repo checkout
 #       uses: actions/checkout@v3
 #     - name: run test
 #       uses: ./.github/actions/azsecpacl-ubnt
